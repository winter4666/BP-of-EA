apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app.kubernetes.io/name: mysql
  ports:
    - port: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: bp-of-ea-service
spec:
  selector:
    app.kubernetes.io/name: bp-of-ea
  ports:
    - port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: teacher-service
spec:
  selector:
    app.kubernetes.io/name: teacher
  ports:
    - port: 8090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0.30
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: secret
        - name: MYSQL_DATABASE
          value: demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bp-of-ea-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bp-of-ea
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bp-of-ea
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: bp-of-ea
        image: winter4666/bp-of-ea
        env:
        - name: APP_ENVIRONMENT
          value: "dev"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teacher-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: teacher
  template:
    metadata:
      labels:
        app.kubernetes.io/name: teacher
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: teacher
          image: wiremock/wiremock:2.35.0
          args: ["--port", "8090", "--verbose"]
          volumeMounts:
            - name: wiremock-mappings-volume
              mountPath: "/home/wiremock/mappings"
              readOnly: true
      volumes:
        - name: wiremock-mappings-volume
          configMap:
            name: wiremock-mappings
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: wiremock-mappings
data:
  getTeacherInfo.json: |
    {
      "request": {
        "method": "GET",
        "urlPath": "/teachers"
      },
      "response": {
        "status": 200,
        "jsonBody": [{"gender": "MAN"}],
        "headers": {
          "Content-Type": "application/json"
        }
      }
    }
---
apiVersion: telemetry.istio.io/v1alpha1
kind: Telemetry
metadata:
  name: mesh-default
  namespace: istio-system
spec:
  accessLogging:
    - providers:
        - name: envoy
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: bp-of-ea-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: bp-of-ea
spec:
  hosts:
    - "*"
  gateways:
    - bp-of-ea-gateway
  http:
    - route:
        - destination:
            host: bp-of-ea-service.default.svc.cluster.local
            port:
              number: 8080